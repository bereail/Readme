{"ast":null,"code":"// src/api/libros.js\n\nimport axios from 'axios';\nconst BASE_URL = 'http://127.0.0.1:8000/api';\nexport const buscarLibros = query => axios.get(`${BASE_URL}/buscar-libros/${query}/`);\nexport const guardarLibro = data => axios.post(`${BASE_URL}/guardar-libro/`, data);\nexport const guardarLectura = data => axios.post(`${BASE_URL}/guardar-lectura/`, data);\nexport const obtenerLecturas = () => axios.get(`${BASE_URL}/lecturas/`).then(response => response.data).catch(error => {\n  console.error(\"❌ Error al obtener lecturas\", error);\n  throw error;\n});\nexport const obtenerLecturaPorId = async id => {\n  const response = await fetch(`http://localhost:8000/api/libro/${id}/`);\n  if (!response.ok) throw new Error('Lectura no encontrada');\n  return await response.json();\n};\nexport const actualizarLectura = async (id, datos) => {\n  const res = await fetch(`http://localhost:8000/api/libro/${id}/`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(datos)\n  });\n  if (!res.ok) throw new Error(\"Error al actualizar\");\n  return res.json();\n};","map":{"version":3,"names":["axios","BASE_URL","buscarLibros","query","get","guardarLibro","data","post","guardarLectura","obtenerLecturas","then","response","catch","error","console","obtenerLecturaPorId","id","fetch","ok","Error","json","actualizarLectura","datos","res","method","headers","body","JSON","stringify"],"sources":["D:/Bere/GIT/readme/front/src/api/libros.js"],"sourcesContent":["// src/api/libros.js\r\n\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = 'http://127.0.0.1:8000/api';\r\n\r\nexport const buscarLibros = (query) =>\r\n  axios.get(`${BASE_URL}/buscar-libros/${query}/`);\r\n\r\nexport const guardarLibro = (data) =>\r\n  axios.post(`${BASE_URL}/guardar-libro/`, data);\r\n\r\nexport const guardarLectura = (data) =>\r\n  axios.post(`${BASE_URL}/guardar-lectura/`, data);\r\n\r\nexport const obtenerLecturas = () =>\r\n  axios.get(`${BASE_URL}/lecturas/`)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      console.error(\"❌ Error al obtener lecturas\", error);\r\n      throw error;\r\n    });\r\n\r\nexport const obtenerLecturaPorId = async (id) => {\r\n  const response = await fetch(`http://localhost:8000/api/libro/${id}/`);\r\n  if (!response.ok) throw new Error('Lectura no encontrada');\r\n  return await response.json();\r\n};\r\n\r\nexport const actualizarLectura = async (id, datos) => {\r\n  const res = await fetch(`http://localhost:8000/api/libro/${id}/`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(datos),\r\n  });\r\n  if (!res.ok) throw new Error(\"Error al actualizar\");\r\n  return res.json();\r\n};"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,2BAA2B;AAE5C,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAChCH,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,kBAAkBE,KAAK,GAAG,CAAC;AAElD,OAAO,MAAME,YAAY,GAAIC,IAAI,IAC/BN,KAAK,CAACO,IAAI,CAAC,GAAGN,QAAQ,iBAAiB,EAAEK,IAAI,CAAC;AAEhD,OAAO,MAAME,cAAc,GAAIF,IAAI,IACjCN,KAAK,CAACO,IAAI,CAAC,GAAGN,QAAQ,mBAAmB,EAAEK,IAAI,CAAC;AAElD,OAAO,MAAMG,eAAe,GAAGA,CAAA,KAC7BT,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,YAAY,CAAC,CAC/BS,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACL,IAAI,CAAC,CAC/BM,KAAK,CAACC,KAAK,IAAI;EACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACnD,MAAMA,KAAK;AACb,CAAC,CAAC;AAEN,OAAO,MAAME,mBAAmB,GAAG,MAAOC,EAAE,IAAK;EAC/C,MAAML,QAAQ,GAAG,MAAMM,KAAK,CAAC,mCAAmCD,EAAE,GAAG,CAAC;EACtE,IAAI,CAACL,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1D,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAOL,EAAE,EAAEM,KAAK,KAAK;EACpD,MAAMC,GAAG,GAAG,MAAMN,KAAK,CAAC,mCAAmCD,EAAE,GAAG,EAAE;IAChEQ,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,KAAK;EAC5B,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACL,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACnD,OAAOI,GAAG,CAACH,IAAI,CAAC,CAAC;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}